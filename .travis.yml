sudo: required

dist: xenial

language: java

services:
  - docker

# No output from git clone command
git:
  quiet: true

# All environment variables must be in one line to trigger a single build.
env:
  - EI_BACKEND_PORT=8099 JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64


# Using default 'test' stage for our tests, and only running deploy stage
# (after merge) on master branch
stages:
  - systemTest
  - name: deploy
    if: branch = master


before_install:
  - sudo apt-get update
  - sudo apt-get install -y openjdk-8-jdk
  - export PATH=$(echo "$PATH" | sed -e 's/:\/usr\/local\/lib\/jvm\/openjdk11\/bin//')
  - export PATH=/usr/lib/jvm/java-8-openjdk-amd64/bin:$PATH
  - export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64
  - java -version
  - |
    if [[ $TRAVIS_JOB_NAME = integrationTests ]]; then
      git clone --depth=50 --branch=master https://github.com/eiffel-community/eiffel-intelligence.git
      source src/main/docker/env.bash
      docker-compose -f src/main/docker/docker-compose.yml up -d eiffel-er mongodb rabbitmq jenkins mail-server
    fi


# Only used before integrationTests
install:
  - cd eiffel-intelligence
  - chmod +x pom.xml
  - mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
  - export EIFFEL_WAR=$(ls target/*.war)
  - java -Dspring.config.additional-location=file:../src/integrationtest/resources/integration-test.properties -Dserver.port=${EI_BACKEND_PORT} -jar ${EIFFEL_WAR} &
  - cd ..


after_script:
  - docker-compose -f src/main/docker/docker-compose.yml down
  - fuser -k ${EI_BACKEND_PORT}/tcp


# Generate site documentation using mvn site plugin
before_deploy:
  - rm -rf docs
  - mvn site -B


# List of jobs to run, tied to specific stages
jobs:
  include:
    - stage: test
      name: functionalTests
      before_install: skip
      install: skip
      script:
        - sudo apt-get update
        - sudo apt-get install -y openjdk-8-jdk
        - export PATH=$(echo "$PATH" | sed -e 's/:\/usr\/local\/lib\/jvm\/openjdk11\/bin//')
        - export PATH=/usr/lib/jvm/java-8-openjdk-amd64/bin:$PATH
        - echo $PATH
        - export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64
        - java -version
        - mvn test -B
      after_script: skip
    - stage: test
      name: integrationTests
      script:
        - "mvn verify -P integrationTest -DskipUTs -Dei.backend.instances.list.json.content=\"[{ 'contextPath': '', 'port': '${EI_BACKEND_PORT}', 'name': 'EI-Backend-1', 'host': 'localhost', 'https': false, 'defaultBackend': true}]\" -B"
    - stage: systemTest
      name: systemTests
      install: skip
      script:
        - chmod +x src/systemtest/resources/systemtest.sh
        - src/systemtest/resources/systemtest.sh start
        - |
          mvn verify -P systemTest -Dei.frontend.url="http://${HOST}:8081" -Djenkins.external.url="http://${HOST}:8082" -B \
          -Dit.test=ArtifactFlowRunner
        - |
          mvn verify -P systemTest -Dei.frontend.url="http://${HOST}:8081" -Djenkins.external.url="http://${HOST}:8082" -B \
          -Dit.test=SourceChangeFlowRunner
        - |
          mvn verify -P systemTest -Dei.frontend.url="http://${HOST}:8081" -Djenkins.external.url="http://${HOST}:8082" -B \
          -Dit.test=TestExecutionFlowRunner
      after_script: skip
    - stage: deploy
      name: deployGitHubPages
      before_install: skip    # do not run again
      install: skip           # do not run again
      script: skip            # do not run default test scripts
      after_script: skip      # do not run again
      deploy:
        provider: pages
        skip_cleanup: true
        github-token: $GITHUB_TOKEN
        local_dir: docs/
